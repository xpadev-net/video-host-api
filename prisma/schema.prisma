generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Visibility {
  PUBLIC
  UNLISTED
  PRIVATE
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String    @id @default(uuid())
  name      String
  username  String    @unique
  password  String? // if null, it means the user is using by system
  role      Role      @default(USER)
  avatarUrl String?
  Series    Series[]
  Movie     Movie[]
  note      String?
  Session   Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Session {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  token     String   @db.Text
  expiredAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([token(length: 1024)], name: "idx_session_token")
}

model Series {
  id          String     @id @default(uuid())
  title       String
  description String?
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String
  movies      Movie[]
  visibility  Visibility @default(PUBLIC)
  note        String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Movie {
  id           String     @id @default(uuid())
  title        String
  description  String?
  author       User       @relation(fields: [authorId], references: [id])
  authorId     String
  series       Series?    @relation(fields: [seriesId], references: [id])
  seriesId     String?
  duration     Int        @default(0)
  contentUrl   String
  thumbnailUrl String?
  visibility   Visibility @default(PUBLIC)
  note         String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
